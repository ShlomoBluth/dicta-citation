name: Firefox tests

on:
  push
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   - cron:  '0 2,10,18 * * *'


jobs:
  cypress-e2e:
    name: Run on firefox
    runs-on: ubuntu-latest
    container: 
      image: cypress/included:13.6.6
      options: --user 1001

    steps:
    - uses: actions/checkout@v4
      with: 
        submodules: true


    # - name: Set up Node.js
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: '14.18.0'

    - name: Attempt to fix vulnerabilities (optional)
      run: npm audit fix || true


    - name: Install Cypress and reporters
      run: |
        echo "Installing Cypress and reporters..."
        npm install --save-dev cypress cypress-multi-reporters mochawesome

        echo "Verifying Cypress installation..."
        npx cypress cache path
        npx cypress cache list
        npx cypress verify

        mkdir -p public/videos



    

    - name: Set test flags from config
      run: |
        export TOOL_TESTS=$(grep TOOL_TESTS cypress.config.js | awk -F ':' '{print $2}' | tr -d ' ",')
        export REQUESTS_TESTS=$(grep REQUESTS_TESTS cypress.config.js | awk -F ':' '{print $2}' | tr -d ' ",')

        echo "TOOL_TESTS=${TOOL_TESTS}" >> $GITHUB_ENV
        echo "REQUESTS_TESTS=${REQUESTS_TESTS}" >> $GITHUB_ENV
    
    - name: Run firefox tool tests
      run: |
        touch toolTest.log
        toolTestsCommand='npx cypress run --browser firefox --spec ./cypress/e2e/toolTests.js \
        --config trashAssetsBeforeRuns=false'
        if eval $toolTestsCommand >> toolTest.log
        then
          cat toolTest.log
        else
          if grep -q 'Error: ffmpeg exited' toolTest.log \
          || grep -q 'TimeoutError: operation timed out' toolTest.log \
          || grep -q 'Because this error occurred during a `before each` hook' toolTest.log \
          || grep -q 'EISDIR: illegal operation on a directory, read' toolTest.log;
          then
            cat toolTest.log; $toolTestsCommand
          else
            cat toolTest.log; exit 1
          fi
        fi 
      if: ${{env.TOOL_TESTS == 'true'}}

    - name: Copy test execution videos 
      run: |
        cp cypress/videos/* public/videos
      if: ${{ always() && (env.TOOL_TESTS == 'true')}}

    - name: Run firefox requests tests
      run: |
        touch requestsTest.log
        requestsTestsCommand='npx cypress run --browser firefox --spec ./cypress/e2e/requestsTests.js \
        --config trashAssetsBeforeRuns=false'
        if eval $requestsTestsCommand >> requestsTest.log
        then
          cat requestsTest.log
        else
          if grep -q 'Error: ffmpeg exited' requestsTest.log \
          || grep -q 'Because this error occurred during a `before each` hook' requestsTest.log \
          || grep -q 'EISDIR: illegal operation on a directory, read' requestsTest.log;
          then
            cat requestsTest.log; $requestsTestsCommand
          else
            cat requestsTest.log; exit 1
          fi
        fi 
      if: ${{always() && (env.REQUESTS_TESTS == 'true')}}


    - name: Copy test execution videos 
      run: |
        cp cypress/videos/* public/videos
      if: ${{ always() && (env.REQUESTS_TESTS == 'true') }}

    - name: Merge test results into one
      run: npx mochawesome-merge cypress/results/json/*.json > index.json
      if: ${{ always() && ((env.REQUESTS_TESTS == 'true') || (env.TOOL_TESTS == 'true')) }}

    - name: Generate HTML report
      run: npx marge index.json --reportDir public --assetsDir public/assets --reportPageTitle index.html
      if: ${{ always() && ((env.REQUESTS_TESTS == 'true') || (env.TOOL_TESTS == 'true')) }}

    - name: Deploy report page
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
      if: ${{ always() && ((env.REQUESTS_TESTS == 'true') || (env.TOOL_TESTS == 'true')) }}
